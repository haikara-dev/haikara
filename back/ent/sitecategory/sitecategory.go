// Code generated by ent, DO NOT EDIT.

package sitecategory

import (
	"time"
)

const (
	// Label holds the string label denoting the sitecategory type in the database.
	Label = "site_category"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldLabel holds the string denoting the label field in the database.
	FieldLabel = "label"
	// EdgeSites holds the string denoting the sites edge name in mutations.
	EdgeSites = "sites"
	// Table holds the table name of the sitecategory in the database.
	Table = "site_categories"
	// SitesTable is the table that holds the sites relation/edge. The primary key declared below.
	SitesTable = "site_category_sites"
	// SitesInverseTable is the table name for the Site entity.
	// It exists in this package in order to avoid circular dependency with the "site" package.
	SitesInverseTable = "sites"
)

// Columns holds all SQL columns for sitecategory fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldLabel,
}

var (
	// SitesPrimaryKey and SitesColumn2 are the table columns denoting the
	// primary key for the sites relation (M2M).
	SitesPrimaryKey = []string{"site_category_id", "site_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// LabelValidator is a validator for the "label" field. It is called by the builders before save.
	LabelValidator func(string) error
)
