// Code generated by ent, DO NOT EDIT.

package sitecrawlrule

import (
	"time"
)

const (
	// Label holds the string label denoting the sitecrawlrule type in the database.
	Label = "site_crawl_rule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldArticleSelector holds the string denoting the article_selector field in the database.
	FieldArticleSelector = "article_selector"
	// FieldTitleSelector holds the string denoting the title_selector field in the database.
	FieldTitleSelector = "title_selector"
	// FieldLinkSelector holds the string denoting the link_selector field in the database.
	FieldLinkSelector = "link_selector"
	// FieldDescriptionSelector holds the string denoting the description_selector field in the database.
	FieldDescriptionSelector = "description_selector"
	// FieldHasDataToList holds the string denoting the has_data_to_list field in the database.
	FieldHasDataToList = "has_data_to_list"
	// FieldDateSelector holds the string denoting the date_selector field in the database.
	FieldDateSelector = "date_selector"
	// FieldDateLayout holds the string denoting the date_layout field in the database.
	FieldDateLayout = "date_layout"
	// FieldIsTimeHumanize holds the string denoting the is_time_humanize field in the database.
	FieldIsTimeHumanize = "is_time_humanize"
	// FieldIsSpa holds the string denoting the is_spa field in the database.
	FieldIsSpa = "is_spa"
	// EdgeSite holds the string denoting the site edge name in mutations.
	EdgeSite = "site"
	// Table holds the table name of the sitecrawlrule in the database.
	Table = "site_crawl_rules"
	// SiteTable is the table that holds the site relation/edge.
	SiteTable = "site_crawl_rules"
	// SiteInverseTable is the table name for the Site entity.
	// It exists in this package in order to avoid circular dependency with the "site" package.
	SiteInverseTable = "sites"
	// SiteColumn is the table column denoting the site relation/edge.
	SiteColumn = "site_site_crawl_rule"
)

// Columns holds all SQL columns for sitecrawlrule fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldArticleSelector,
	FieldTitleSelector,
	FieldLinkSelector,
	FieldDescriptionSelector,
	FieldHasDataToList,
	FieldDateSelector,
	FieldDateLayout,
	FieldIsTimeHumanize,
	FieldIsSpa,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "site_crawl_rules"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"site_site_crawl_rule",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultHasDataToList holds the default value on creation for the "has_data_to_list" field.
	DefaultHasDataToList bool
	// DefaultIsTimeHumanize holds the default value on creation for the "is_time_humanize" field.
	DefaultIsTimeHumanize bool
	// DefaultIsSpa holds the default value on creation for the "is_spa" field.
	DefaultIsSpa bool
)
