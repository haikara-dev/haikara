// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArticlesColumns holds the columns for the "articles" table.
	ArticlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
		{Name: "published_at", Type: field.TypeTime},
		{Name: "site_articles", Type: field.TypeInt},
	}
	// ArticlesTable holds the schema information for the "articles" table.
	ArticlesTable = &schema.Table{
		Name:       "articles",
		Columns:    ArticlesColumns,
		PrimaryKey: []*schema.Column{ArticlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "articles_sites_articles",
				Columns:    []*schema.Column{ArticlesColumns[6]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FeedsColumns holds the columns for the "feeds" table.
	FeedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "contents", Type: field.TypeString, Size: 2147483647},
		{Name: "count", Type: field.TypeInt, Default: 0},
		{Name: "site_feeds", Type: field.TypeInt},
	}
	// FeedsTable holds the schema information for the "feeds" table.
	FeedsTable = &schema.Table{
		Name:       "feeds",
		Columns:    FeedsColumns,
		PrimaryKey: []*schema.Column{FeedsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feeds_sites_feeds",
				Columns:    []*schema.Column{FeedsColumns[5]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SitesColumns holds the columns for the "sites" table.
	SitesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
		{Name: "feed_url", Type: field.TypeString},
		{Name: "active", Type: field.TypeBool, Default: false},
	}
	// SitesTable holds the schema information for the "sites" table.
	SitesTable = &schema.Table{
		Name:       "sites",
		Columns:    SitesColumns,
		PrimaryKey: []*schema.Column{SitesColumns[0]},
	}
	// SiteCategoriesColumns holds the columns for the "site_categories" table.
	SiteCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "label", Type: field.TypeString, Unique: true},
	}
	// SiteCategoriesTable holds the schema information for the "site_categories" table.
	SiteCategoriesTable = &schema.Table{
		Name:       "site_categories",
		Columns:    SiteCategoriesColumns,
		PrimaryKey: []*schema.Column{SiteCategoriesColumns[0]},
	}
	// SiteCrawlRulesColumns holds the columns for the "site_crawl_rules" table.
	SiteCrawlRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "article_selector", Type: field.TypeString},
		{Name: "title_selector", Type: field.TypeString},
		{Name: "link_selector", Type: field.TypeString},
		{Name: "description_selector", Type: field.TypeString},
		{Name: "has_data_to_list", Type: field.TypeBool, Default: true},
		{Name: "date_selector", Type: field.TypeString},
		{Name: "date_layout", Type: field.TypeString},
		{Name: "is_time_humanize", Type: field.TypeBool, Default: false},
		{Name: "is_spa", Type: field.TypeBool, Default: false},
		{Name: "site_site_crawl_rule", Type: field.TypeInt, Unique: true},
	}
	// SiteCrawlRulesTable holds the schema information for the "site_crawl_rules" table.
	SiteCrawlRulesTable = &schema.Table{
		Name:       "site_crawl_rules",
		Columns:    SiteCrawlRulesColumns,
		PrimaryKey: []*schema.Column{SiteCrawlRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "site_crawl_rules_sites_site_crawl_rule",
				Columns:    []*schema.Column{SiteCrawlRulesColumns[12]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "user"}, Default: "user"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// SiteCategorySitesColumns holds the columns for the "site_category_sites" table.
	SiteCategorySitesColumns = []*schema.Column{
		{Name: "site_category_id", Type: field.TypeInt},
		{Name: "site_id", Type: field.TypeInt},
	}
	// SiteCategorySitesTable holds the schema information for the "site_category_sites" table.
	SiteCategorySitesTable = &schema.Table{
		Name:       "site_category_sites",
		Columns:    SiteCategorySitesColumns,
		PrimaryKey: []*schema.Column{SiteCategorySitesColumns[0], SiteCategorySitesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "site_category_sites_site_category_id",
				Columns:    []*schema.Column{SiteCategorySitesColumns[0]},
				RefColumns: []*schema.Column{SiteCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "site_category_sites_site_id",
				Columns:    []*schema.Column{SiteCategorySitesColumns[1]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticlesTable,
		FeedsTable,
		SitesTable,
		SiteCategoriesTable,
		SiteCrawlRulesTable,
		UsersTable,
		SiteCategorySitesTable,
	}
)

func init() {
	ArticlesTable.ForeignKeys[0].RefTable = SitesTable
	FeedsTable.ForeignKeys[0].RefTable = SitesTable
	SiteCrawlRulesTable.ForeignKeys[0].RefTable = SitesTable
	SiteCategorySitesTable.ForeignKeys[0].RefTable = SiteCategoriesTable
	SiteCategorySitesTable.ForeignKeys[1].RefTable = SitesTable
}
